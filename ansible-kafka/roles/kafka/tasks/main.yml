- name: create kafka group 
  group: 
    name: kafka
    state: present
  tags: 
    - kafka
    - kafka_setup
 
- name: create kafka user
  user: 
    name: kafka
    group: kafka
  tags: 
    - kafka
    - kafka_setup
 
- name: Check if Kafka has already been downloaded and unpacked
  stat:
    path: '{{ kafka_dir }}_{{ kafka_scala_version }}-{{ kafka_version }}'
  register: dir

- name: Download Apache Kafka
  get_url:
    url: "{{ kafka_download_base_url }}/{{ kafka_version }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz"
    dest: /tmp
  when: not dir.stat.exists
  tags:
    - kafka_setup

- name: Unpack Apache Kafka
  unarchive:
    src: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    dest: '{{ kafka_root_dir }}'
    copy: no
    group: kafka
    owner: kafka
  when: not dir.stat.exists
  tags:
    - kafka_setup

- name: Create symlink to kafka installation directory
  file:
    src: '{{ kafka_root_dir }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}'
    dest: '{{ kafka_dir }}'
    state: link
    group: kafka
    owner: kafka
  tags:
    - kafka_setup

- name: Create directory for kafka data log files
  file:
    path: '{{ kafka_data_log_dirs }}'
    state: directory
    group: kafka
    owner: kafka
    mode: 0755
  tags:
    - kafka_setup

- name: Create directory for kafka application logs
  file:
    path: '{{ kafka_log_dir }}'
    state: directory
    group: kafka
    owner: kafka
    mode: 0755
  tags:
    - kafka_setup

- name: Register '{{ kafka_dir }}/logs' directory status
  stat:
    path: '{{ kafka_dir }}/logs'
  register: application_logs_dir
  tags:
    - kafka_setup

- name: Create symlink to application log directory
  file:
    src: '{{ kafka_log_dir }}'
    dest: '{{ kafka_dir }}/logs'
    state: link
    group: kafka
    owner: kafka
    mode: 0755
    follow: no
  when: not application_logs_dir.stat.exists
  tags:
    - kafka_setup

- name: Create directory for symlink to kafka configuration files
  file:
    path: /etc/kafka
    state: directory
    group: kafka
    owner: kafka
    mode: 0755
  tags:
    - kafka_setup

- name: Template configuration file to server.properties
  template:
    src: server.properties.j2
    dest: '{{ kafka_dir }}/config/server.properties'
    group: kafka
    owner: kafka
    mode: 0644
  notify:
    - Restart kafka service
  tags:
    - kafka_config

- name: Template configuration file to zookeeper.properties
  template:
    src: zookeeper.properties.j2
    dest: '{{ kafka_dir }}/config/zookeeper.properties'
    group: kafka
    owner: kafka
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to connect-standalone.properties
  template:
    src: connect-standalone.properties.j2
    dest: '{{ kafka_dir }}/config/connect-standalone.properties'
    group: kafka
    owner: kafka
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to connect-distributed.properties
  template:
    src: connect-distributed.properties.j2
    dest: '{{ kafka_dir }}/config/connect-distributed.properties'
    group: kafka
    owner: kafka
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to producer.properties
  template:
    src: producer.properties.j2
    dest: '{{ kafka_dir }}/config/producer.properties'
    group: kafka
    owner: kafka
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to consumer.properties
  template:
    src: consumer.properties.j2
    dest: '{{ kafka_dir }}/config/consumer.properties'
    group: kafka
    owner: kafka
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to log4j.properties
  template:
    src: log4j.properties.j2
    dest: '{{ kafka_dir }}/config/log4j.properties'
    group: kafka
    owner: kafka
    mode: 0644
  tags:
    - kafka_config

- name: Create symlink to kafka server properties file
  file:
    src: '{{ kafka_dir }}/config/server.properties'
    dest: /etc/kafka/server.properties
    state: link
    group: kafka
    owner: kafka
  tags:
    - kafka_config

- name: Create symlink to kafka connect standalone properties file
  file:
    src: '{{ kafka_dir }}/config/connect-standalone.properties'
    dest: /etc/kafka/connect-standalone.properties
    state: link
    group: kafka
    owner: kafka
  tags:
    - kafka_config

- name: Create symlink to kafka connect distributed properties file
  file:
    src: '{{ kafka_dir }}/config/connect-distributed.properties'
    dest: /etc/kafka/connect-distributed.properties
    state: link
    group: kafka
    owner: kafka
  tags:
    - kafka_config

- name: Create symlink to kafka producer properties file
  file:
    src: '{{ kafka_dir }}/config/producer.properties'
    dest: /etc/kafka/producer.properties
    state: link
    group: kafka
    owner: kafka
  tags:
    - kafka_config

- name: Create symlink to kafka consumer properties file
  file:
    src: '{{ kafka_dir }}/config/consumer.properties'
    dest: /etc/kafka/consumer.properties
    state: link
    group: kafka
    owner: kafka
  tags:
    - kafka_config

- name: Create symlink to kafka log4j properties file
  file:
    src: '{{ kafka_dir }}/config/log4j.properties'
    dest: /etc/kafka/log4j.properties
    state: link
    group: kafka
    owner: kafka
  tags:
    - kafka_config

- name: Template kafka systemd service
  template:
    src: kafka.service.j2
    dest: "{{ kafka_unit_path }}"
    group: kafka
    owner: kafka
    mode: 0644
  notify:
    - Restart kafka systemd
  tags:
    - kafka_service

- name: Install and start the kafka service
  service:
    name: kafka
    state: started
    enabled: yes
  when: kafka_start
  tags:
    - kafka_service

- name: Delete the kafka archive file
  file:
    path: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    state: absent
  tags:
    - kafka_cleanup
    - never